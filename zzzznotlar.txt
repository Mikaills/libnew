ft_strtrim
// !!--!!hello!!--!! s1 and the set is "!-"
// How can I remove !! that is in front of the hello. Can think of "!!" which is in the beginning of the string
// 1- s1 goes until '\0'
// 2- s1[0] is seen and it is compared to the set
// 3- if it is matched i++ for s1
// 4- if it doesn't match with any character of the set we get the beginning of the trimmed string
// 5- and vice versa for the end of the string which means starting from the end of the string. Therefore u need to get the lenght of the s1

ft_strlcat
// test_cases (dest 13(+ deneme yazılı yani 6+1 (null termination) ve src "osman"+1(null termination)
// 1- size destin içinde yazılandan küçük ise return (dest)
// 2- size destin içinde yazılan + 1 (null termination)
//	+ 1 (src için yazdıralabilecek alan) ise return (dest + src[i])
// ++ ama null termination var mı bak ?? evet null termination var
// 3- sonda null ekle

ft_split
// parametreler "Foo Bar Baz" olduğunu düşün
// delimeter is " "
// therefore you return will be "Foo" "Bar" "Bar"
// What is we do ft_strtrim ? 
// until null pointer 
// how much do I need to open space ?

ft_itoa
if (n >= 10) // 19 / 10 + 48 = 49 next is 9

// #include "libft.h"


// size_t ft_contword(char const *s, char c)
// {
// 	size_t i;
// 	size_t len;

// 	i = 0;
// 	len = 0;
// 	while(s[i] != '\0')
// 	{
// 		if(s[i] == c)
// 		{
// 			len++;
// 		}
// 		i++;
// 	}

// }

// char **ft_split(char const *s, char c)
// {
// 	size_t i;
// 	size_t k;
// 	size_t x;
	
// 	x = 0;
// 	i = 0;
// 	k = 0;
// 	char **str_arr = malloc(sizeof(char) * ft_strlen(s) + 1);
// 	while(*str_arr[i] != '\0')
// 	{
// 		k = 0;
// 		while(str_arr[i][k] != c)
// 		{
// 			str_arr[i][k] = s[x];
// 			k++;
// 		}
// 		str_arr[i][k] = '\0';
// 		x++;
// 		i++;
// 	}
// 	return (str_arr);
// }
// int main()
// {
// char *str = "Foo Bar Baz";
// char set = ' ';
// char **str_arr = ft_split (str, set);
// size_t i = 0;
// size_t k = 0;
// while (str_arr[i][k] != '\0')
// 	{
	
// 		printf("%c\n", str_arr[i][k] );
// 		k++;
// 	}
// }
